[project]
name = "galactic-dynamics-bt"
version = "0.1.1"
description = "Solutions to the problem sets from Binney & Tremaine's Galactic Dynamics (2nd Edition)."
readme = "README.md"
requires-python = ">=3.12"
license = { text = "MIT" }
authors = [
    {name = "Carlos Vera-Ciro", email = "caverac@gmail.com"},
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Astronomy",
    "Topic :: Scientific/Engineering :: Physics",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Operating System :: OS Independent",
]
keywords = [
    "astronomy",
    "galactic dynamics",
    "stellar orbits",
]
dependencies = [
    "dacite>=1.9.2",
    "matplotlib>=3.0.0",
]

[project.urls]
Homepage = "https://github.com/caverac/galactic-dynamics-bt"
Documentation = "https://github.com/caverac/galactic-dynamics-bt"
Repository = "https://github.com/caverac/galactic-dynamics-bt"
"Bug Reports" = "https://github.com/caverac/galactic-dynamics-bt/issues"

[build-system]
requires = ["hatchling>=1.25"]
build-backend = "hatchling.build"

[dependency-groups]
dev = [
    "pytest>=8.3",
    "pytest-cov>=5.0",
    "mypy>=1.11",
    "flake8>=7.3.0",
    "pylint>=4.0.0",
    "black>=25.9.0",
    "pydocstyle>=6.3.0",
    "commitizen>=3.0.0",
]

docs = [
    "mkdocs>=1.6",
    "mkdocs-material>=9.5",
    "mkdocstrings>=0.25",
    "mkdocstrings-python>=1.10",
    "mkdocs-jupyter>=0.25",
    "jupyter>=1.0",
    "mkdocs-bibtex>=4.4.0",
    "mkdocs-macros-plugin>=1.0.0",
]

[tool.uv]
default-groups = ["dev", "docs"]

[tool.pylint]
max-line-length = 120
disable = [
    "invalid-name",
    "too-few-public-methods",
    "unnecessary-ellipsis",
    "too-many-public-methods",
    "duplicate-code",
]

[tool.pydocstyle]
convention = "numpy"

[tool.pytest.ini_options]
addopts = [
    "--doctest-modules",
    "--doctest-glob=README.*",
    "--doctest-glob=*.md",
    "--doctest-glob=*.py",
    "--cov=galactic_dynamics_bt",
    "--cov-report=xml",
    "--cov-report=term-missing",
    "--cov-fail-under=100",
]
testpaths = [
    "galactic_dynamics_bt",
    "examples",
    "tests",
]

[tool.black]
line-length = 120
target-version = ['py312']

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.coverage.run]
source = ["galactic_dynamics_bt"]
omit = ["*/tests/*", "*/test_*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]

[tool.pyright]
reportUnknownMemberType = false
reportUnknownVariableType = false
reportUnknownArgumentType = false

[tool.commitizen]
name = "cz_conventional_commits"
tag_format = "v$version"
version_scheme = "pep440"
version_provider = "pep621"
update_changelog_on_bump = true
major_version_zero = true
